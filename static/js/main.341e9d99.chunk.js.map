{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","followers","views","likes","className","src","alt","prototype","PropTypes","string","isRequired","shape","number","Statistics","title","randomIntegerFromInterval","min","max","Math","floor","random","map","stat","style","backgroundColor","label","percentage","id","arrayOf","FriendListItem","isOnline","width","height","borderRadius","FriendList","friends","friend","friendList","bool","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.341e9d99.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import s from './Profile.module.css';\n\nfunction Profile({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) {\n  return (\n    <div className=\"profile\">\n      <div className=\"description\">\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\n        <p className=\"name\">{name}</p>\n        <p className=\"tag\">@{tag}</p>\n        <p className=\"location\">{location}</p>\n      </div>\n\n      <ul className=\"stats\">\n        <li>\n          <span className=\"label\">Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li>\n          <span className=\"label\">Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li>\n          <span className=\"label\">Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.prototype = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n// Profile.defaultProps={\n//     avatar:'ссылка'\n// }\nexport default Profile;\n","import PropTypes from 'prop-types';\n// import s from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n  const randomIntegerFromInterval = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n  const randomColor = () => {\n    return `rgb(${randomIntegerFromInterval(\n      0,\n      255,\n    )}, ${randomIntegerFromInterval(0, 255)},${randomIntegerFromInterval(\n      0,\n      255,\n    )})`;\n  };\n  return (\n    <section className=\"statistics\">\n      <h2 className=\"title\">{title}</h2>\n\n      <ul className=\"stat-list\">\n        {stats.map(stat => {\n          return (\n            <li\n              className=\"item\"\n              style={{ backgroundColor: randomColor() }}\n              key={stat.id}\n            >\n              <span className=\"label\">{stat.label}</span>\n              <span className=\"percentage\">{stat.percentage}%</span>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.prototype = {\n  Statistics: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import React from 'react';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <>\n      <span className=\"status\">\n        {isOnline ? (\n          <div\n            style={{\n              width: '20px',\n              height: '20px',\n              backgroundColor: 'green',\n              borderRadius: '50%',\n            }}\n          ></div>\n        ) : (\n          <div\n            style={{\n              width: '20px',\n              height: '20px',\n              backgroundColor: 'red',\n              borderRadius: '50%',\n            }}\n          ></div>\n        )}\n      </span>\n      <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </>\n  );\n}\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\n\n// import s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <li className=\"item\" key={friend.id}>\n          <FriendListItem {...friend} />{' '}\n        </li>\n      ))}\n    </ul>\n  );\n}\nFriendList.prototype = {\n  friendList: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => {\n          return (\n            <tr key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.prototype = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\n\nimport Profile from './components/Profile/Profile';\nimport user from './data/user.json';\n\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './data/statistical-data.json';\n\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './data/friends.json';\n\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload Stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}